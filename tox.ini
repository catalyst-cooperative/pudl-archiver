[tox]
isolated_build = True
envlist = ci

[testenv]
allowlist_externals =
    bash
    coverage
    sphinx-build
    twine
# shared directory for re-used packages
envdir = {toxinidir}/.env_tox
passenv =
    CI
    CONDA_PREFIX
    GITHUB_*
    ZENODO_*
    GOOGLE_APPLICATION_CREDENTIALS
    HOME
    SQLALCHEMY_WARN_20
    EPACEMS_API_KEY
covargs = --cov={envsitepackagesdir}/pudl_archiver --cov-append --cov-report=xml
covreport = coverage report --sort=cover

#######################################################################################
# Code and Documentation Linters
#######################################################################################
[testenv:ruff]
description = Run the ruff linter on the whole repo
skip_install = false
extras =
    tests
commands =
    ruff check ./

[testenv:pre_commit]
description = Run git pre-commit hooks not covered by the other linters.
skip_install = false
extras =
    tests
commands =
    pre-commit run --all-files --show-diff-on-failure check-merge-conflict
    pre-commit run --all-files --show-diff-on-failure check-yaml
    pre-commit run --all-files --show-diff-on-failure check-case-conflict
    pre-commit run --all-files --show-diff-on-failure debug-statements
    pre-commit run --all-files --show-diff-on-failure name-tests-test

[testenv:linters]
description = Run the pre-commit, flake8 and bandit linters.
skip_install = false
extras =
    {[testenv:pre_commit]extras}
    {[testenv:ruff]extras}
commands =
    {[testenv:pre_commit]commands}
    {[testenv:ruff]commands}


#######################################################################################
# Test the code
#######################################################################################
[testenv:unit]
description = Run all the software unit tests.
extras =
    tests
commands =
    pytest {posargs} {[testenv]covargs} \
      --doctest-modules {envsitepackagesdir}/pudl_archiver \
      tests

[testenv:ci]
description = Run all continuous integration (CI) checks & generate test coverage.
skip_install = false
recreate = true
extras =
    {[testenv:linters]extras}
    {[testenv:unit]extras}
commands =
    coverage erase
    {[testenv:linters]commands}
    {[testenv:unit]commands}
    {[testenv]covreport}
